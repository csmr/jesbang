#!/bin/bash

jesbang_version="0.1.4"

# Jesbang - Debian netinstall to simple OB desktop
#
# - First install debian netinstall - no desktops, only system utilities
# 1. Login as root, download this script:
#     $ wget -nc https://raw.githubusercontent.com/csmr/jesbang/master/jes.bang
# 2. enable exection flag:
#     $ chmod +x jes.bang
# 3. and run it:
#     $ ./jes.bang

desktop_pack=(

  xorg lightdm dpkg-dev sudo
  openbox obconf obmenu desktop-base compton arandr

  network-manager-gnome network-manager-openvpn-gnome
  network-manager-pptp-gnome network-manager-vpnc-gnome

  # CLI utilities
  anacron bash-completion build-essential
  avahi-utils avahi-daemon libnss-mdns gvfs-bin 
  debconf-utils menu apt-xapian-index lintian 
  usbutils cpufrequtils screen tmux

  # unzip for github, compression utilities (unrar from non-free)
  unrar unace unalz unzip lzop rzip zip xz-utils arj bzip2

  # Media stuff
  alsa-base alsa-utils volumeicon-alsa
  lame pulseaudio pulseaudio-module-x11 pavucontrol
  xfburn thunar-archive-plugin thunar-media-tags-plugin
  vlc vlc-plugin-notify

  # GTK utilities
  gimp gimp-plugin-registry geeqie 
  evince gnumeric galculator gigolo catfish gsimplecal
  geany geany-plugins gnome-keyring gtrayicon

  # net stuff
  ftp rsync sshfs whois openssh-client
  wireless-tools xchat xtightvncviewer
  iceweasel net-tools nmap ufw gufw
  transmission-gtk

)

desktop_pack_norecs=(

  tint2 lxappearance terminator thunar thunar-volman clipit
  xfce4-power-manager xfce4-notifyd libnotify-bin 
  gtk2-engines-murrine gtk2-engines-pixbuf gtk2-engines

  # filesys
  e2fsprogs xfsprogs reiserfsprogs reiser4progs 
  jfsutils ntfs-3g fuse gvfs-fuse fusesmb

  # firmware
  firmware-linux firmware-iwlwifi firmware-ralink firmware-ipw2x00 ntp
  firmware-realtek intel-microcode amd64-microcode user-setup

  # utils
  mc ranger tilda
  synaptic gdebi file-roller gparted 
  zenity wmctrl xinput xsel xdotool python-xdg suckless-tools gmrun
  scrot xfce4-screenshooter viewnior hsetroot xscreensaver
  bc gksu fbxkb htop rpl cowsay figlet dmz-cursor-theme
  vrms

  # fonts
  fonts-dejavu fonts-droid ttf-freefont ttf-liberation

	# dev tools
	git git-svn	curl vim-tiny vim-nox
)
log_path="/tmp/jes-log.txt"
interactive_flag="n"
bugcheck_flag="n"
set -e # exit immediately on error

# just log everything
exec > >(tee $log_path) 2>&1  

# Function to standardize apt-get calls
function apt_get_runner {
    # if any arguments were given, add them to apt-get call
    apt_args=(-q -y)
    log "Installing $*" 
    apt-get "${apt_args[@]}" install "$@" 
    log "Finished Installing $*\n"
    
    if [ "$interactive_flag" == "y" ]; then
        read -p "Press [Enter] key to continue...";
    fi
}

# Function to handle logging to the screen and file
function log {
    echo -e "$@"
}

#Help!
function show_help {
    echo "Jesbang - a OB desktop installer $jesbang_version
    run as root with:
    # ./jes.bang [--option [--..]]

    Options:
      --ignore - Do NOT stop on any errors found
      --nobugcheck - Do NOT install listbugs to check for known issues
      --interactive - Stop and wait for user after each install piece"
    exit 1
}

# Handle command line arguments
while [ "$#" -gt 0 ]; do
  case $1 in
    -h|--help)
      show_help
      ;;
    --ignore)
      echo "*** Jesbang -- Ignoring Errors"
      set +e # ignore errors
      ;;
    --bugcheck)
      echo "*** Jesbang -- enable Bug Checking"
      bugcheck_flag="y"
      ;;
    --interactive)
      echo "-- Interactive Mode"
      interactive_flag="y"
      ;;
    *)
      # ignore unknown option
      ;;
  esac
  shift
done

# Make sure we have elevated privilages, or exit
if [ "$(whoami)" != "root" ]; then
  echo "Please start as superuser: run '\$ su' (asks root password) and try again. "
  exit 1
fi

echo "" > $log_path
log "*** Jesbang starts! Installing base!"

log "*** Part I"
apt-get update
apt-get upgrade
apt_get_runner policykit-1

if [ "$bugcheck_flag" == "y" ]; then
    echo "***** ALIAS SETUP *****"
    echo alias hld='echo "alias hld = sudo apt-mark hold app_name" ; sudo apt-mark hold' >> ~/.bashrc 
    echo alias unhld='echo "alias unhld = sudo apt-mark unhold app_name" ; sudo apt-mark unhold' >> ~/.bashrc 
    apt_get_runner apt-listbugs
fi

# Enable non-free repo - for unrar and flashplayer
log "***** ENABLING NON-FREE REPO *****"
echo "deb http://http.debian.net/debian jessie contrib non-free" > /etc/apt/sources.list.d/jessie.contrib.nonfree.list 
apt-get update
apt_get_runner "${desktop_pack[@]}"
cd 
apt_get_params+=('--no-install-recommends')
apt_get_runner "${desktop_pack_norecs[@]}"
apt_get_params=()


# temp test for installs
command -v curl || { echo >&2 "part I install curl fail"; exit 1; }
command -v nmap || { echo >&2 "part I install nmap fail"; exit 1; }
command -v ex || { echo >&2 "part I install ex (vim) fail"; exit 1; }

# Part I - end

log "*** Part II"
# themes, presets

# autorun on openbox startup:
echo "tint2 &" >> /etc/xdg/openbox/autostart
echo "tilda &" >> /etc/xdg/openbox/autostart

# set tilda to popup with "Menu" -key
sed -ie 's/^key = ".*"/key = "Menu"/' .config/tilda/config_0

# gksu run in sudo mode
update-alternatives --set libgksu-gconf-defaults /usr/share/libgksu/debian/gconf-defaults.libgksu-sudo 
update-gconf-defaults 



# Part II - end


log "*** Part III"
# Theming disabled - files no longer hosted
# cd /tmp 
# wget -nc https://github.com/shimmerproject/Greybird/archive/master.zip 
# unzip -q master.zip 
# cd Greybird-master
# no build script cp -r Greybird-git /usr/share/themes 

# Display Manager
# todo# mv lightdm.conf lightdm.conf-orig 
# cd

# Part III - end


log "*** Part IV"

# add initial user to sudoer group
user_nick=$(getent passwd 1000 | awk -F: '{print $1}')
if [ "$user_nick" ]; then
  adduser "$user_nick" sudo 
fi

# add users to sudoers, so all users can sudo
echo "%sudo ALL = (ALL:ALL) ALL" > sud.tmp 
chmod 0440 sud.tmp
mv sud.tmp /etc/sudoers.d/all.users 

# Log data on how open source the package set is
echo "*** Non-free packages:"
vrms 

#games not in roots PATH
/usr/games/cowsay -W20 -e "^^" "Sudoing is now enabled for all (future) users." 

# Part IV - end

# Done
log "*** Jess! Jesbang has installed base to your Debian Jessie."
echo "*** You can find logs in '$log_path'"
echo "Please restart your computer. ('shutdown -r now')"
